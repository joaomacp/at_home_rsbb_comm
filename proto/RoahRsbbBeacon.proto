/*
 * Copyright 2014 Instituto de Sistemas e Robotica, Instituto Superior Tecnico
 *
 * This file is part of RoAH RSBB Comm.
 *
 * RoAH RSBB Comm is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * RoAH RSBB Comm is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with RoAH RSBB Comm.  If not, see <http://www.gnu.org/licenses/>.
 */

package roah_rsbb_msgs;

import "Time.proto";

option java_package = "eu.rockin.roah_rsbb_msgs";
option java_outer_classname = "RoahRsbbBeaconProtos";

message RoahRsbbBeacon {
  enum CompType {
    COMP_ID  = 6666;
    MSG_TYPE = 10;
  }

  // The teams that should be active benchmarking
  repeated BenchmarkingTeam benchmarking_teams = 1;


  // Last time the bell was rung
  required Time devices_bell = 10;

  // State of switch 1
  required bool devices_switch_1 = 11;

  // State of switch 2
  required bool devices_switch_2 = 12;

  // State of switch 3
  required bool devices_switch_3 = 13;

  // State of dimmer (0-100)
  required uint32 devices_dimmer = 14;

  // State of blinds (0-100)
  required uint32 devices_blinds = 15;

  // State of door/window detector
  required bool devices_door_win_detect = 16;

  // True means the tablet should display the map
  // False means it should display the call button
  required bool tablet_display_map = 20;
  
  // UTC time of the last time the user used the call button on the tablet
  required Time tablet_call_time = 21;
  
  // UTC time of the last time the user selected a position on the tablet
  required Time tablet_position_time = 22;
  
  // Last user selected position on the tablet, X
  required double tablet_position_x = 23;
  
  // Last user selected position on the tablet, Y
  required double tablet_position_y = 24;
}

message BenchmarkingTeam {
  enum CompType {
    COMP_ID  = 6666;
    MSG_TYPE = 11;
  }

  // The team name that should be benchmarking
  required string team_name = 1;

  // The specific robot in the team
  required string robot_name = 2;

  // The RSBB port to connect the private channel
  required uint32 rsbb_port = 3;
}
